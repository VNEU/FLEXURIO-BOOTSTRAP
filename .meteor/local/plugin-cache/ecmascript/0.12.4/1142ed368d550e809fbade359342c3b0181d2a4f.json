{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jayuda/Documents/PROJECT/FLEXURIO/FLEXURIO-BOOTSTRAP/packages/oauth1/oauth1_server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/oauth1/oauth1_server.js","filename":"/Users/jayuda/Documents/PROJECT/FLEXURIO/FLEXURIO-BOOTSTRAP/packages/oauth1/oauth1_server.js","passPerPreset":false,"envName":"development","cwd":"/Users/jayuda/Documents/PROJECT/FLEXURIO/FLEXURIO-BOOTSTRAP","root":"/Users/jayuda/Documents/PROJECT/FLEXURIO/FLEXURIO-BOOTSTRAP","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/jayuda/Documents/PROJECT/FLEXURIO/FLEXURIO-BOOTSTRAP/packages/oauth1/oauth1_server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/oauth1/oauth1_server.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nconst module1 = module;\nlet url;\nmodule1.link(\"url\", {\n  default(v) {\n    url = v;\n  }\n\n}, 0);\nlet OAuth1Binding;\nmodule1.link(\"./oauth1_binding\", {\n  OAuth1Binding(v) {\n    OAuth1Binding = v;\n  }\n\n}, 1);\n\nOAuth._queryParamsWithAuthTokenUrl = (authUrl, oauthBinding, params = {}, whitelistedQueryParams = []) => {\n  const redirectUrlObj = url.parse(authUrl, true);\n  Object.assign(redirectUrlObj.query, whitelistedQueryParams.reduce((prev, param) => params.query[param] ? (0, _objectSpread2.default)({}, prev, {\n    param: params.query[param]\n  }) : prev, {}), {\n    oauth_token: oauthBinding.requestToken\n  }); // Clear the `search` so it is rebuilt by Node's `url` from the `query` above.\n  // Using previous versions of the Node `url` module, this was just set to \"\"\n  // However, Node 6 docs seem to indicate that this should be `undefined`.\n\n  delete redirectUrlObj.search; // Reconstruct the URL back with provided query parameters merged with oauth_token\n\n  return url.format(redirectUrlObj);\n}; // connect middleware\n\n\nOAuth._requestHandlers['1'] = (service, query, res) => {\n  const config = ServiceConfiguration.configurations.findOne({\n    service: service.serviceName\n  });\n\n  if (!config) {\n    throw new ServiceConfiguration.ConfigError(service.serviceName);\n  }\n\n  const {\n    urls\n  } = service;\n  const oauthBinding = new OAuth1Binding(config, urls);\n  let credentialSecret;\n\n  if (query.requestTokenAndRedirect) {\n    // step 1 - get and store a request token\n    const callbackUrl = OAuth._redirectUri(service.serviceName, config, {\n      state: query.state,\n      cordova: query.cordova === \"true\",\n      android: query.android === \"true\"\n    }); // Get a request token to start auth process\n\n\n    oauthBinding.prepareRequestToken(callbackUrl); // Keep track of request token so we can verify it on the next step\n\n    OAuth._storeRequestToken(OAuth._credentialTokenFromQuery(query), oauthBinding.requestToken, oauthBinding.requestTokenSecret); // support for scope/name parameters\n\n\n    let redirectUrl;\n    const authParams = {\n      query\n    };\n\n    if (typeof urls.authenticate === \"function\") {\n      redirectUrl = urls.authenticate(oauthBinding, authParams);\n    } else {\n      redirectUrl = OAuth._queryParamsWithAuthTokenUrl(urls.authenticate, oauthBinding, authParams);\n    } // redirect to provider login, which will redirect back to \"step 2\" below\n\n\n    res.writeHead(302, {\n      'Location': redirectUrl\n    });\n    res.end();\n  } else {\n    // step 2, redirected from provider login - store the result\n    // and close the window to allow the login handler to proceed\n    // Get the user's request token so we can verify it and clear it\n    const requestTokenInfo = OAuth._retrieveRequestToken(OAuth._credentialTokenFromQuery(query));\n\n    if (!requestTokenInfo) {\n      throw new Error(\"Unable to retrieve request token\");\n    } // Verify user authorized access and the oauth_token matches\n    // the requestToken from previous step\n\n\n    if (query.oauth_token && query.oauth_token === requestTokenInfo.requestToken) {\n      // Prepare the login results before returning.  This way the\n      // subsequent call to the `login` method will be immediate.\n      // Get the access token for signing requests\n      oauthBinding.prepareAccessToken(query, requestTokenInfo.requestTokenSecret); // Run service-specific handler.\n\n      const oauthResult = service.handleOauthRequest(oauthBinding, {\n        query: query\n      });\n\n      const credentialToken = OAuth._credentialTokenFromQuery(query);\n\n      credentialSecret = Random.secret(); // Store the login result so it can be retrieved in another\n      // browser tab by the result handler\n\n      OAuth._storePendingCredential(credentialToken, {\n        serviceName: service.serviceName,\n        serviceData: oauthResult.serviceData,\n        options: oauthResult.options\n      }, credentialSecret);\n    } // Either close the window, redirect, or render nothing\n    // if all else fails\n\n\n    OAuth._renderOauthResults(res, query, credentialSecret);\n  }\n};","map":{"version":3,"sources":["packages/oauth1/oauth1_server.js"],"names":["module1","module","url","link","default","v","OAuth1Binding","OAuth","_queryParamsWithAuthTokenUrl","authUrl","oauthBinding","params","whitelistedQueryParams","redirectUrlObj","parse","Object","assign","query","reduce","prev","param","oauth_token","requestToken","search","format","_requestHandlers","service","res","config","ServiceConfiguration","configurations","findOne","serviceName","ConfigError","urls","credentialSecret","requestTokenAndRedirect","callbackUrl","_redirectUri","state","cordova","android","prepareRequestToken","_storeRequestToken","_credentialTokenFromQuery","requestTokenSecret","redirectUrl","authParams","authenticate","writeHead","end","requestTokenInfo","_retrieveRequestToken","Error","prepareAccessToken","oauthResult","handleOauthRequest","credentialToken","Random","secret","_storePendingCredential","serviceData","options","_renderOauthResults"],"mappings":";;;;AAAA,MAAMA,OAAO,GAACC,MAAd;AAAqB,IAAIC,GAAJ;AAAQF,OAAO,CAACG,IAAR,CAAa,KAAb,EAAmB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACH,IAAAA,GAAG,GAACG,CAAJ;AAAM;;AAAlB,CAAnB,EAAuC,CAAvC;AAA0C,IAAIC,aAAJ;AAAkBN,OAAO,CAACG,IAAR,CAAa,kBAAb,EAAgC;AAACG,EAAAA,aAAa,CAACD,CAAD,EAAG;AAACC,IAAAA,aAAa,GAACD,CAAd;AAAgB;;AAAlC,CAAhC,EAAoE,CAApE;;AAGzFE,KAAK,CAACC,4BAAN,GAAqC,CAACC,OAAD,EAAUC,YAAV,EAAwBC,MAAM,GAAG,EAAjC,EAAqCC,sBAAsB,GAAG,EAA9D,KAAqE;AACxG,QAAMC,cAAc,GAAGX,GAAG,CAACY,KAAJ,CAAUL,OAAV,EAAmB,IAAnB,CAAvB;AAEAM,EAAAA,MAAM,CAACC,MAAP,CACEH,cAAc,CAACI,KADjB,EAEEL,sBAAsB,CAACM,MAAvB,CAA8B,CAACC,IAAD,EAAOC,KAAP,KAC5BT,MAAM,CAACM,KAAP,CAAaG,KAAb,oCAA2BD,IAA3B;AAAiCC,IAAAA,KAAK,EAAET,MAAM,CAACM,KAAP,CAAaG,KAAb;AAAxC,OAAgED,IADlE,EAEE,EAFF,CAFF,EAME;AACEE,IAAAA,WAAW,EAAEX,YAAY,CAACY;AAD5B,GANF,EAHwG,CAcxG;AACA;AACA;;AACA,SAAOT,cAAc,CAACU,MAAtB,CAjBwG,CAmBxG;;AACA,SAAOrB,GAAG,CAACsB,MAAJ,CAAWX,cAAX,CAAP;AACD,CArBD,C,CAuBA;;;AACAN,KAAK,CAACkB,gBAAN,CAAuB,GAAvB,IAA8B,CAACC,OAAD,EAAUT,KAAV,EAAiBU,GAAjB,KAAyB;AACrD,QAAMC,MAAM,GAAGC,oBAAoB,CAACC,cAArB,CAAoCC,OAApC,CAA4C;AAACL,IAAAA,OAAO,EAAEA,OAAO,CAACM;AAAlB,GAA5C,CAAf;;AACA,MAAI,CAAEJ,MAAN,EAAc;AACZ,UAAM,IAAIC,oBAAoB,CAACI,WAAzB,CAAqCP,OAAO,CAACM,WAA7C,CAAN;AACD;;AAED,QAAM;AAAEE,IAAAA;AAAF,MAAWR,OAAjB;AACA,QAAMhB,YAAY,GAAG,IAAIJ,aAAJ,CAAkBsB,MAAlB,EAA0BM,IAA1B,CAArB;AAEA,MAAIC,gBAAJ;;AAEA,MAAIlB,KAAK,CAACmB,uBAAV,EAAmC;AACjC;AACA,UAAMC,WAAW,GAAG9B,KAAK,CAAC+B,YAAN,CAAmBZ,OAAO,CAACM,WAA3B,EAAwCJ,MAAxC,EAAgD;AAClEW,MAAAA,KAAK,EAAEtB,KAAK,CAACsB,KADqD;AAElEC,MAAAA,OAAO,EAAGvB,KAAK,CAACuB,OAAN,KAAkB,MAFsC;AAGlEC,MAAAA,OAAO,EAAGxB,KAAK,CAACwB,OAAN,KAAkB;AAHsC,KAAhD,CAApB,CAFiC,CAQjC;;;AACA/B,IAAAA,YAAY,CAACgC,mBAAb,CAAiCL,WAAjC,EATiC,CAWjC;;AACA9B,IAAAA,KAAK,CAACoC,kBAAN,CACEpC,KAAK,CAACqC,yBAAN,CAAgC3B,KAAhC,CADF,EAEEP,YAAY,CAACY,YAFf,EAGEZ,YAAY,CAACmC,kBAHf,EAZiC,CAiBjC;;;AACA,QAAIC,WAAJ;AACA,UAAMC,UAAU,GAAG;AAAE9B,MAAAA;AAAF,KAAnB;;AAEA,QAAG,OAAOiB,IAAI,CAACc,YAAZ,KAA6B,UAAhC,EAA4C;AAC1CF,MAAAA,WAAW,GAAGZ,IAAI,CAACc,YAAL,CAAkBtC,YAAlB,EAAgCqC,UAAhC,CAAd;AACD,KAFD,MAEO;AACLD,MAAAA,WAAW,GAAGvC,KAAK,CAACC,4BAAN,CACZ0B,IAAI,CAACc,YADO,EAEZtC,YAFY,EAGZqC,UAHY,CAAd;AAKD,KA7BgC,CA+BjC;;;AAEApB,IAAAA,GAAG,CAACsB,SAAJ,CAAc,GAAd,EAAmB;AAAC,kBAAYH;AAAb,KAAnB;AACAnB,IAAAA,GAAG,CAACuB,GAAJ;AACD,GAnCD,MAmCO;AACL;AACA;AAEA;AACA,UAAMC,gBAAgB,GAAG5C,KAAK,CAAC6C,qBAAN,CACvB7C,KAAK,CAACqC,yBAAN,CAAgC3B,KAAhC,CADuB,CAAzB;;AAGA,QAAI,CAAEkC,gBAAN,EAAwB;AACtB,YAAM,IAAIE,KAAJ,CAAU,kCAAV,CAAN;AACD,KAVI,CAYL;AACA;;;AACA,QAAIpC,KAAK,CAACI,WAAN,IAAqBJ,KAAK,CAACI,WAAN,KAAsB8B,gBAAgB,CAAC7B,YAAhE,EAA8E;AAE5E;AACA;AAEA;AACAZ,MAAAA,YAAY,CAAC4C,kBAAb,CAAgCrC,KAAhC,EAAuCkC,gBAAgB,CAACN,kBAAxD,EAN4E,CAQ5E;;AACA,YAAMU,WAAW,GAAG7B,OAAO,CAAC8B,kBAAR,CAClB9C,YADkB,EACJ;AAAEO,QAAAA,KAAK,EAAEA;AAAT,OADI,CAApB;;AAGA,YAAMwC,eAAe,GAAGlD,KAAK,CAACqC,yBAAN,CAAgC3B,KAAhC,CAAxB;;AACAkB,MAAAA,gBAAgB,GAAGuB,MAAM,CAACC,MAAP,EAAnB,CAb4E,CAe5E;AACA;;AACApD,MAAAA,KAAK,CAACqD,uBAAN,CAA8BH,eAA9B,EAA+C;AAC7CzB,QAAAA,WAAW,EAAEN,OAAO,CAACM,WADwB;AAE7C6B,QAAAA,WAAW,EAAEN,WAAW,CAACM,WAFoB;AAG7CC,QAAAA,OAAO,EAAEP,WAAW,CAACO;AAHwB,OAA/C,EAIG3B,gBAJH;AAKD,KApCI,CAsCL;AACA;;;AACA5B,IAAAA,KAAK,CAACwD,mBAAN,CAA0BpC,GAA1B,EAA+BV,KAA/B,EAAsCkB,gBAAtC;AACD;AACF,CAxFD","sourcesContent":["import url from 'url';\nimport { OAuth1Binding } from './oauth1_binding';\n\nOAuth._queryParamsWithAuthTokenUrl = (authUrl, oauthBinding, params = {}, whitelistedQueryParams = []) => {\n  const redirectUrlObj = url.parse(authUrl, true);\n\n  Object.assign(\n    redirectUrlObj.query,\n    whitelistedQueryParams.reduce((prev, param) => \n      params.query[param] ? { ...prev, param: params.query[param] } : prev,\n      {}\n    ),\n    {\n      oauth_token: oauthBinding.requestToken,\n    }\n  );\n\n  // Clear the `search` so it is rebuilt by Node's `url` from the `query` above.\n  // Using previous versions of the Node `url` module, this was just set to \"\"\n  // However, Node 6 docs seem to indicate that this should be `undefined`.\n  delete redirectUrlObj.search;\n\n  // Reconstruct the URL back with provided query parameters merged with oauth_token\n  return url.format(redirectUrlObj);\n};\n\n// connect middleware\nOAuth._requestHandlers['1'] = (service, query, res) => {\n  const config = ServiceConfiguration.configurations.findOne({service: service.serviceName});\n  if (! config) {\n    throw new ServiceConfiguration.ConfigError(service.serviceName);\n  }\n\n  const { urls } = service;\n  const oauthBinding = new OAuth1Binding(config, urls);\n\n  let credentialSecret;\n\n  if (query.requestTokenAndRedirect) {\n    // step 1 - get and store a request token\n    const callbackUrl = OAuth._redirectUri(service.serviceName, config, {\n      state: query.state,\n      cordova: (query.cordova === \"true\"),\n      android: (query.android === \"true\")\n    });\n\n    // Get a request token to start auth process\n    oauthBinding.prepareRequestToken(callbackUrl);\n\n    // Keep track of request token so we can verify it on the next step\n    OAuth._storeRequestToken(\n      OAuth._credentialTokenFromQuery(query),\n      oauthBinding.requestToken,\n      oauthBinding.requestTokenSecret);\n\n    // support for scope/name parameters\n    let redirectUrl;\n    const authParams = { query };\n\n    if(typeof urls.authenticate === \"function\") {\n      redirectUrl = urls.authenticate(oauthBinding, authParams);\n    } else {\n      redirectUrl = OAuth._queryParamsWithAuthTokenUrl(\n        urls.authenticate,\n        oauthBinding,\n        authParams\n      );\n    }\n\n    // redirect to provider login, which will redirect back to \"step 2\" below\n\n    res.writeHead(302, {'Location': redirectUrl});\n    res.end();\n  } else {\n    // step 2, redirected from provider login - store the result\n    // and close the window to allow the login handler to proceed\n\n    // Get the user's request token so we can verify it and clear it\n    const requestTokenInfo = OAuth._retrieveRequestToken(\n      OAuth._credentialTokenFromQuery(query));\n\n    if (! requestTokenInfo) {\n      throw new Error(\"Unable to retrieve request token\");\n    }\n\n    // Verify user authorized access and the oauth_token matches\n    // the requestToken from previous step\n    if (query.oauth_token && query.oauth_token === requestTokenInfo.requestToken) {\n\n      // Prepare the login results before returning.  This way the\n      // subsequent call to the `login` method will be immediate.\n\n      // Get the access token for signing requests\n      oauthBinding.prepareAccessToken(query, requestTokenInfo.requestTokenSecret);\n\n      // Run service-specific handler.\n      const oauthResult = service.handleOauthRequest(\n        oauthBinding, { query: query });\n\n      const credentialToken = OAuth._credentialTokenFromQuery(query);\n      credentialSecret = Random.secret();\n\n      // Store the login result so it can be retrieved in another\n      // browser tab by the result handler\n      OAuth._storePendingCredential(credentialToken, {\n        serviceName: service.serviceName,\n        serviceData: oauthResult.serviceData,\n        options: oauthResult.options\n      }, credentialSecret);\n    }\n\n    // Either close the window, redirect, or render nothing\n    // if all else fails\n    OAuth._renderOauthResults(res, query, credentialSecret);\n  }\n};\n"]},"sourceType":"script","hash":"1142ed368d550e809fbade359342c3b0181d2a4f"}
