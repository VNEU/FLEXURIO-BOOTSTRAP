{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jayuda/Documents/PROJECT/FLEXURIO/FLEXURIO-BOOTSTRAP/server/methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"server/methods.js","filename":"/Users/jayuda/Documents/PROJECT/FLEXURIO/FLEXURIO-BOOTSTRAP/server/methods.js","passPerPreset":false,"envName":"development","cwd":"/Users/jayuda/Documents/PROJECT/FLEXURIO/FLEXURIO-BOOTSTRAP","root":"/Users/jayuda/Documents/PROJECT/FLEXURIO/FLEXURIO-BOOTSTRAP","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/jayuda/Documents/PROJECT/FLEXURIO/FLEXURIO-BOOTSTRAP/server/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods.js"}},"code":"let Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nlet Session;\nmodule.link(\"meteor/session\", {\n  Session(v) {\n    Session = v;\n  }\n\n}, 1);\nMeteor.methods({\n  createUserNew: function (nama, email, password) {\n    if (Roles.userIsInRole(this.userId, ['root', 'administrator', 'admin'])) {\n      if (Meteor.users.find({\n        username: email\n      }).count() === 0) {\n        Accounts.createUser({\n          email: email,\n          password: password,\n          profile: {\n            name: nama,\n            createAt: new Date(),\n            updateAt: new Date(),\n            verification: \"1\"\n          }\n        });\n      }\n    }\n  },\n  deleteUser: function (_id) {\n    if (Roles.userIsInRole(this.userId, ['root', 'administrator', 'admin'])) {\n      Meteor.users.remove(_id);\n    }\n  },\n  updateUserData: function (_id, emailNew, passwordNew) {\n    if (emailNew !== \"\") {\n      if (adaDATA(MEMBER.findOne({\n        _id: _id\n      }).emails)) {\n        Accounts.removeEmail(_id, MEMBER.findOne({\n          _id: _id\n        }).emails[0].address);\n      }\n\n      Accounts.addEmail(_id, emailNew);\n    }\n\n    if (passwordNew !== \"\") {\n      Accounts.setPassword(_id, passwordNew);\n    }\n  },\n  updateFotoMember: function (oDataFoto, idSelector) {\n    if (!this.userId) {\n      throw new Meteor.Error(403, \"You must be logged in\");\n    }\n\n    try {\n      if (!/^data:image\\/png;base64,/i.test(oDataFoto)) {\n        return false;\n      }\n\n      return MEMBER.update({\n        _id: idSelector\n      }, {\n        $set: {\n          'profile.fotoProfile': oDataFoto\n        }\n      });\n    } catch (e) {\n      throw new Meteor.Error(403, e.message);\n    }\n\n    return true;\n  },\n  updateFotoBackground: function (oDataFoto, idSelector) {\n    try {\n      return MEMBER.update({\n        _id: idSelector\n      }, {\n        $set: {\n          'profile.fotoBackground': oDataFoto\n        }\n      });\n    } catch (e) {\n      throw new Meteor.Error(403, e.message);\n    }\n  },\n  cariKunci: function () {\n    let sTokenKey = DATATOKEN.findOne().sTokenKey;\n    MEMBER.update({\n      _id: this.userId\n    }, {\n      $set: {\n        tokenTemp: sTokenKey\n      }\n    });\n  },\n  resetKunci: function () {\n    MEMBER.update({\n      _id: this.userId\n    }, {\n      $set: {\n        tokenTemp: \"\"\n      }\n    });\n  },\n  updatePassUser: function (_id, passwordNew) {\n    if (passwordNew !== \"\") {\n      Accounts.setPassword(_id, passwordNew);\n    }\n  },\n  badgeData: function (sRouter) {\n    var qty = countBadge(sRouter);\n\n    if (parseInt(qty) > 0) {\n      return qty;\n    } else {\n      return \"\";\n    }\n  }\n});\n\nsetToken = function (idUser) {\n  sTokenKey = DATATOKEN.findOne().sTokenKey;\n  return sTokenKey;\n};","map":{"version":3,"sources":["server/methods.js"],"names":["Accounts","module","link","v","Session","Meteor","methods","createUserNew","nama","email","password","Roles","userIsInRole","userId","users","find","username","count","createUser","profile","name","createAt","Date","updateAt","verification","deleteUser","_id","remove","updateUserData","emailNew","passwordNew","adaDATA","MEMBER","findOne","emails","removeEmail","address","addEmail","setPassword","updateFotoMember","oDataFoto","idSelector","Error","test","update","$set","e","message","updateFotoBackground","cariKunci","sTokenKey","DATATOKEN","tokenTemp","resetKunci","updatePassUser","badgeData","sRouter","qty","countBadge","parseInt","setToken","idUser"],"mappings":"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","sourcesContent":["import {Accounts} from \"meteor/accounts-base\";\nimport {Session} from \"meteor/session\";\n\nMeteor.methods({\n\tcreateUserNew: function (nama, email, password) {\n\t\tif (Roles.userIsInRole(this.userId, ['root', 'administrator', 'admin'])) {\n\t\t\tif (Meteor.users.find({username: email}).count() === 0) {\n\t\t\t\tAccounts.createUser({\n\t\t\t\t\temail: email,\n\t\t\t\t\tpassword: password,\n\t\t\t\t\tprofile: {\n\t\t\t\t\t\tname: nama,\n\t\t\t\t\t\tcreateAt: new Date(),\n\t\t\t\t\t\tupdateAt: new Date(),\n\t\t\t\t\t\tverification: \"1\"\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\tdeleteUser: function (_id) {\n\t\tif (Roles.userIsInRole(this.userId, ['root', 'administrator', 'admin'])) {\n\t\t\tMeteor.users.remove(_id);\n\t\t}\n\t},\n    updateUserData: function (_id, emailNew, passwordNew) {\n        if (emailNew !== \"\") {\n            if (adaDATA(MEMBER.findOne({_id: _id}).emails)) {\n                Accounts.removeEmail(_id, MEMBER.findOne({_id: _id}).emails[0].address);\n            }\n            Accounts.addEmail(_id, emailNew);\n        }\n        if (passwordNew !== \"\") {\n            Accounts.setPassword(_id, passwordNew);\n        }\n    },\n\tupdateFotoMember: function (oDataFoto, idSelector) {\n\t\tif (!this.userId) {\n\t\t\tthrow new Meteor.Error(403, \"You must be logged in\");\n\t\t}\n\n\t\ttry {\n\t\t\tif (!/^data:image\\/png;base64,/i.test(oDataFoto)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn MEMBER.update(\n\t\t\t\t{_id: idSelector},\n\t\t\t\t{\n\t\t\t\t\t$set: {\n\t\t\t\t\t\t'profile.fotoProfile': oDataFoto\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\tcatch (e) {\n\t\t\tthrow new Meteor.Error(403, e.message);\n\t\t}\n\t\treturn true;\n\t},\n\n\tupdateFotoBackground: function (oDataFoto, idSelector) {\n\t\ttry {\n\t\t\treturn MEMBER.update(\n\t\t\t\t{_id: idSelector},\n\t\t\t\t{$set: {'profile.fotoBackground': oDataFoto}}\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tthrow new Meteor.Error(403, e.message);\n\t\t}\n\t},\n\tcariKunci: function () {\n\t\tlet sTokenKey = DATATOKEN.findOne().sTokenKey;\n\t\tMEMBER.update(\n\t\t\t{_id:this.userId},\n\t\t\t{\n\t\t\t\t$set:{\n\t\t\t\t\t\ttokenTemp:sTokenKey\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t},\n\tresetKunci: function () {\n\t\tMEMBER.update(\n\t\t\t{_id:this.userId},\n\t\t\t{\n\t\t\t\t$set:{\n\t\t\t\t\t\ttokenTemp:\"\"\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t},\n\n    updatePassUser: function (_id, passwordNew) {\n        if (passwordNew !== \"\") {\n            Accounts.setPassword(_id, passwordNew);\n        }\n    },\n    badgeData: function (sRouter) {\n        var qty = countBadge(sRouter);\n        if(parseInt(qty) > 0) {\n            return  qty;\n        } else {\n            return  \"\";\n        }\n    },\n\n\n});\n\nsetToken = function (idUser) {\n\tsTokenKey = DATATOKEN.findOne().sTokenKey;\n\treturn sTokenKey;\n};\n"]},"sourceType":"script","hash":"65e9e72f3dfec9e345d5be825ebd18decb38fe41"}
