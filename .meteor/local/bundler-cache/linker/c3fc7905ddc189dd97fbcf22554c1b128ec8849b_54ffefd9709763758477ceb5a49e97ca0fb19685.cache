[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar WebApp = Package.webapp.WebApp;\nvar Log = Package.logging.Log;\nvar Tracker = Package.deps.Tracker;\nvar Deps = Package.deps.Deps;\nvar Session = Package.session.Session;\nvar DDP = Package['ddp-client'].DDP;\nvar Mongo = Package.mongo.Mongo;\nvar Spacebars = Package.spacebars.Spacebars;\nvar Template = Package['templating-runtime'].Template;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar _ = Package.underscore._;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar Random = Package.random.Random;\nvar EJSON = Package.ejson.EJSON;\nvar LaunchScreen = Package['launch-screen'].LaunchScreen;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar flxcomments, addComments;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// packages/jayuda_flx-comments/client/template.flxcomments.js                                    //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\n\nTemplate.__checkName(\"flxcomments\");\nTemplate[\"flxcomments\"] = new Template(\"Template.flxcomments\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<!-- Comments -->\\n    \"), Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isCommentOpen\"));\n  }, function() {\n    return [ \"\\n        \", HTML.A({\n      class: \"addComments mdi-communication-clear-all linkSubDetail glyphicon glyphicon-comment\",\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"_id\"));\n      },\n      style: \"position: relative;left: 5%;\"\n    }, \"\\n            Comments\\n        \"), \"\\n    \" ];\n  }), \"\\n\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isComment\"));\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      id: function() {\n        return [ \"Comments\", Spacebars.mustache(view.lookup(\"_id\")) ];\n      },\n      style: \"width: 94%;left: 3%;position: relative;\"\n    }, \"\\n            \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"comments\"));\n    }, function() {\n      return [ \"\\n                \", HTML.DIV({\n        class: \"list-group-item\"\n      }, \"\\n                    \", HTML.A({\n        class: \"mdi-action-account-box linkSubDetail\",\n        href: \"#\"\n      }, \" By\\n                        : \", Blaze.View(\"lookup:comment_By\", function() {\n        return Spacebars.mustache(view.lookup(\"comment_By\"));\n      }), \" at \", Blaze.View(\"lookup:comment_createAt\", function() {\n        return Spacebars.mustache(view.lookup(\"comment_createAt\"));\n      })), HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \"Â \"\n      }), \"\\n                    \", HTML.P({\n        class: \"list-group-item-text textDetail\"\n      }, \"\\n                        \", Blaze.View(\"lookup:comment_text\", function() {\n        return Spacebars.mustache(view.lookup(\"comment_text\"));\n      }), \"\\n                    \"), \"\\n                \"), \"\\n            \" ];\n    }), \"\\n            \", HTML.FORM({\n      class: \"form-comments form-group has-info\",\n      name: function() {\n        return Spacebars.mustache(view.lookup(\"_id\"));\n      }\n    }, \"\\n                \", HTML.INPUT({\n      class: \"form-control floating-label\",\n      name: function() {\n        return [ \"textComments\", Spacebars.mustache(view.lookup(\"_id\")) ];\n      },\n      id: function() {\n        return [ \"textComments\", Spacebars.mustache(view.lookup(\"_id\")) ];\n      },\n      type: \"text\",\n      placeholder: \"Types your comments\",\n      style: \"font-size: xx-small;\"\n    }), HTML.BR(), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.BR(), \"\\n    \" ];\n  }) ];\n}));\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// packages/jayuda_flx-comments/client/flxcomments.js                                             //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\n/**\n * Generated from flexurio tools\n * Flexurio By Pamungkas Jayuda yulius.jayuda@gmail.com / +628119003077\n */\n Template.flxcomments.onRendered(function () {\n     var instance = Template.instance(),\n     view = Blaze.getView(),\n     data = Blaze.getData(view);\n     Session.set(\"isCommentOpen\", data.isCommentOpen);\n });\n\nTemplate.flxcomments.created = function () {\n\tSession.set(\"isComment\", false);\n\tSession.set(\"isCommentOpen\", true);\n};\n\nTemplate.flxcomments.helpers({\n\tisComment: function () {\n\t\treturn Session.get(\"isComment\") === this._id || Session.get(\"isCommentOpen\");\n\t},\n    isCommentOpen: function () {\n\t\treturn !Session.get(\"isCommentOpen\");\n\t}\n});\n\nTemplate.flxcomments.events({\n\t'click a.addComments': function (e,tpl) {\n\t\te.preventDefault();\n\t\tif(Session.get(\"isComment\") === e.currentTarget.id) {\n\t\t\tSession.set(\"isComment\", null);\n\t\t} else {\n\t\t\tSession.set(\"isComment\", e.currentTarget.id);\n\t\t}\n\t},\n});\n\n\nflxcomments = function (e,tpl,oCollections) {\n    let idData = e.currentTarget.name;\n    let textComments = tpl.$('input[id=\"textComments' + idData + '\"]').val();\n    if (textComments.length) {\n        addComments(idData, textComments, oCollections);\n    }\n    e.target.reset();\n};\n\naddComments = function (idData, textComments, sCollections) {\n    sCollections.update(idData, {\n            $addToSet: {\n                comments: {\n                    comment_text: textComments,\n                    comment_By: Meteor.user().profile.name,\n                    comment_Byid: Meteor.userId(),\n                    comment_createAt: new Date()\n                }\n            }\n        },\n        {validate: true});\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"jayuda:flx-comments\", {\n  flxcomments: flxcomments\n});\n\n})();\n","servePath":"/packages/jayuda_flx-comments.js"}]